- var host = 'http://localhost:' + port + '/vendor/';

html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible", content="ie=edge")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css")
    title #{title}

    if siteType == 'new' || siteType == 'update'
      link(rel="stylesheet", href=host + "flatpickr.min.css")
      link(rel="stylesheet", href=host + "zooom.min.css")
      link(rel="stylesheet", href=host + "style.css")
    else 
      link(rel="stylesheet", href=host + "style.css")

    body
      block content


    if siteType == 'new' || siteType == 'update'
      script(src=host + "flatpickr.min.js")
      script(src=host + "flatpickr.pl.js")
      script(src=host + "zooom.min.js")
      script(src=host + "sortable.min.js")
      script(src=host + "smooth-scroll.js")

      script.
        const fileJson = '#{title}.json';
        const type = '#{siteType}';

        window.addEventListener('DOMContentLoaded', () => {
          const example1 = document.getElementById('columns');
          const sortable = new Sortable(example1, {
            ghostClass: 'highlight',
            animation: 150,
          });

          const updateForm = (data) => {
            const { head, body } = data;
            const seoTitle = document.querySelector('[name="seoTitle"]');
            const seoDescription = document.querySelector('[name="seoDescription"]');
            const bodyTitle = document.querySelector('[name="bodyTitle"]');
            const bodyDate = document.querySelector('[name="bodyDate"]');
            const bodyText = document.querySelector('[name="bodyText"]');

            // seo
            seoTitle.value = head.title;
            seoDescription.value = head.description;

            // data on the top of the site
            bodyTitle.value = body.title;
            bodyDate.value = body.date;
            bodyText.value = body.text;

            body.items.forEach((element, index) => {
              // console.log(element);
              const image = document.querySelectorAll('[name="imageAlt"]');
              const imageText = document.querySelectorAll('[name="imageText"]');
              image[index].value = element.alt;
              imageText[index].value = element.text;
            });
          };


          const fetchJson = (fileJson) => {
            // eslint-disable-next-line no-undef
            fetch(fileJson)
              .then(response => response.json())
              .then((myJson) => {
                updateForm(myJson);
              })
              .catch(error => console.log('error', error));
          };

          if (type === 'update') {
            fetchJson(fileJson);
          }

          // grid change
          const gridCheckbox = document.querySelector('.grid-view-checked');
          const viewGrid = document.querySelector('.view-grid');
          const iconGrid = document.querySelector('.icon-grid');

          gridCheckbox.addEventListener('click', (e) => {
            viewGrid.classList.toggle('grid-view');
            iconGrid.classList.toggle('green');
            const { target } = e;
            target.innerText = target.innerText === 'GRID OFF' ? 'GRID ON' : 'GRID OFF';
          });

          // scroll
          const backToTop = document.querySelector('.scroll');
          (() => {
            window.addEventListener('scroll', () => {
              const pageyoffset = window.pageYOffset || document.documentElement.scrollTop;
              backToTop.style.display = pageyoffset > 200 ? 'block' : 'none';
            });
          })();

          // zooom image
          const zoom = new Zooom({
            element: '.img-zoom',
            padding: 80,
            overlay: {
              color: '#000',
              opacity: '.5',
            },
          });

          const scroll = new SmoothScroll('.scroll', {
            speed: 100,
            easing: 'easeOutCubic',
          });

          flatpickr('.bodyDate', {
            locale: 'pl',
            dateFormat: 'd.m.Y',
            allowInput: true
          });
        });

